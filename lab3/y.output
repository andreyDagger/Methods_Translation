Grammar

    0 $accept: input $end

    1 input: functions

    2 functions: function
    3          | functions SEMICOLON function

    4 function: function_definition pattern_matchings

    5 function_definition: IDENTIFIER COLONCOLON arg_list ARROW return_type
    6                    | IDENTIFIER COLONCOLON return_type

    7 pattern_matchings: pattern_matching
    8                  | pattern_matchings pattern_matching

    9 pattern_matching: IDENTIFIER pattern EQUALITY result
   10                 | IDENTIFIER EQUALITY result
   11                 | IDENTIFIER pattern guards
   12                 | IDENTIFIER guards

   13 guards: VBAR cond EQUALITY result
   14       | guards VBAR cond EQUALITY result

   15 cond: arg DOUBLEEQ arg
   16     | arg GREATEREQ arg
   17     | arg LESSEQ arg
   18     | arg GREATER arg
   19     | arg LESS arg

   20 pattern: NUMBER
   21        | QUOTED_STRING
   22        | IDENTIFIER
   23        | pattern NUMBER
   24        | pattern QUOTED_STRING
   25        | pattern IDENTIFIER

   26 arg: NUMBER
   27    | QUOTED_STRING
   28    | IDENTIFIER

   29 result: NUMBER
   30       | QUOTED_STRING

   31 arg_list: arg_type
   32         | arg_list ARROW arg_type

   33 arg_type: TYPE

   34 return_type: TYPE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <s> (258) 5 6 9 10 11 12 22 25 28
    TYPE <s> (259) 33 34
    COLONCOLON <s> (260) 5 6
    ARROW <s> (261) 5 32
    EQUALITY <s> (262) 9 10 13 14
    NUMBER <s> (263) 20 23 26 29
    QUOTED_STRING <s> (264) 21 24 27 30
    SEMICOLON <s> (265) 3
    VBAR <s> (266) 13 14
    DOUBLEEQ <s> (267) 15
    GREATEREQ <s> (268) 16
    LESSEQ <s> (269) 17
    GREATER <s> (270) 18
    LESS <s> (271) 19


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    input <s> (18)
        on left: 1
        on right: 0
    functions <vf> (19)
        on left: 2 3
        on right: 1 3
    function <f> (20)
        on left: 4
        on right: 2 3
    function_definition <fd> (21)
        on left: 5 6
        on right: 4
    pattern_matchings <vpm> (22)
        on left: 7 8
        on right: 4 8
    pattern_matching <pm> (23)
        on left: 9 10 11 12
        on right: 7 8
    guards <vpss> (24)
        on left: 13 14
        on right: 11 12 14
    cond <s> (25)
        on left: 15 16 17 18 19
        on right: 13 14
    pattern <vpsb> (26)
        on left: 20 21 22 23 24 25
        on right: 9 11 23 24 25
    arg <s> (27)
        on left: 26 27 28
        on right: 15 16 17 18 19
    result <s> (28)
        on left: 29 30
        on right: 9 10 13 14
    arg_list <vs> (29)
        on left: 31 32
        on right: 5 32
    arg_type <s> (30)
        on left: 33
        on right: 31 32
    return_type <s> (31)
        on left: 34
        on right: 5 6


State 0

    0 $accept: . input $end

    IDENTIFIER  shift, and go to state 1

    input                go to state 2
    functions            go to state 3
    function             go to state 4
    function_definition  go to state 5


State 1

    5 function_definition: IDENTIFIER . COLONCOLON arg_list ARROW return_type
    6                    | IDENTIFIER . COLONCOLON return_type

    COLONCOLON  shift, and go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    1 input: functions .
    3 functions: functions . SEMICOLON function

    SEMICOLON  shift, and go to state 8

    $default  reduce using rule 1 (input)


State 4

    2 functions: function .

    $default  reduce using rule 2 (functions)


State 5

    4 function: function_definition . pattern_matchings

    IDENTIFIER  shift, and go to state 9

    pattern_matchings  go to state 10
    pattern_matching   go to state 11


State 6

    5 function_definition: IDENTIFIER COLONCOLON . arg_list ARROW return_type
    6                    | IDENTIFIER COLONCOLON . return_type

    TYPE  shift, and go to state 12

    arg_list     go to state 13
    arg_type     go to state 14
    return_type  go to state 15


State 7

    0 $accept: input $end .

    $default  accept


State 8

    3 functions: functions SEMICOLON . function

    IDENTIFIER  shift, and go to state 1

    function             go to state 16
    function_definition  go to state 5


State 9

    9 pattern_matching: IDENTIFIER . pattern EQUALITY result
   10                 | IDENTIFIER . EQUALITY result
   11                 | IDENTIFIER . pattern guards
   12                 | IDENTIFIER . guards

    IDENTIFIER     shift, and go to state 17
    EQUALITY       shift, and go to state 18
    NUMBER         shift, and go to state 19
    QUOTED_STRING  shift, and go to state 20
    VBAR           shift, and go to state 21

    guards   go to state 22
    pattern  go to state 23


State 10

    4 function: function_definition pattern_matchings .
    8 pattern_matchings: pattern_matchings . pattern_matching

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 4 (function)

    pattern_matching  go to state 24


State 11

    7 pattern_matchings: pattern_matching .

    $default  reduce using rule 7 (pattern_matchings)


State 12

   33 arg_type: TYPE .
   34 return_type: TYPE .

    IDENTIFIER  reduce using rule 34 (return_type)
    $default    reduce using rule 33 (arg_type)


State 13

    5 function_definition: IDENTIFIER COLONCOLON arg_list . ARROW return_type
   32 arg_list: arg_list . ARROW arg_type

    ARROW  shift, and go to state 25


State 14

   31 arg_list: arg_type .

    $default  reduce using rule 31 (arg_list)


State 15

    6 function_definition: IDENTIFIER COLONCOLON return_type .

    $default  reduce using rule 6 (function_definition)


State 16

    3 functions: functions SEMICOLON function .

    $default  reduce using rule 3 (functions)


State 17

   22 pattern: IDENTIFIER .

    $default  reduce using rule 22 (pattern)


State 18

   10 pattern_matching: IDENTIFIER EQUALITY . result

    NUMBER         shift, and go to state 26
    QUOTED_STRING  shift, and go to state 27

    result  go to state 28


State 19

   20 pattern: NUMBER .

    $default  reduce using rule 20 (pattern)


State 20

   21 pattern: QUOTED_STRING .

    $default  reduce using rule 21 (pattern)


State 21

   13 guards: VBAR . cond EQUALITY result

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    cond  go to state 32
    arg   go to state 33


State 22

   12 pattern_matching: IDENTIFIER guards .
   14 guards: guards . VBAR cond EQUALITY result

    VBAR  shift, and go to state 34

    $default  reduce using rule 12 (pattern_matching)


State 23

    9 pattern_matching: IDENTIFIER pattern . EQUALITY result
   11                 | IDENTIFIER pattern . guards
   23 pattern: pattern . NUMBER
   24        | pattern . QUOTED_STRING
   25        | pattern . IDENTIFIER

    IDENTIFIER     shift, and go to state 35
    EQUALITY       shift, and go to state 36
    NUMBER         shift, and go to state 37
    QUOTED_STRING  shift, and go to state 38
    VBAR           shift, and go to state 21

    guards  go to state 39


State 24

    8 pattern_matchings: pattern_matchings pattern_matching .

    $default  reduce using rule 8 (pattern_matchings)


State 25

    5 function_definition: IDENTIFIER COLONCOLON arg_list ARROW . return_type
   32 arg_list: arg_list ARROW . arg_type

    TYPE  shift, and go to state 12

    arg_type     go to state 40
    return_type  go to state 41


State 26

   29 result: NUMBER .

    $default  reduce using rule 29 (result)


State 27

   30 result: QUOTED_STRING .

    $default  reduce using rule 30 (result)


State 28

   10 pattern_matching: IDENTIFIER EQUALITY result .

    $default  reduce using rule 10 (pattern_matching)


State 29

   28 arg: IDENTIFIER .

    $default  reduce using rule 28 (arg)


State 30

   26 arg: NUMBER .

    $default  reduce using rule 26 (arg)


State 31

   27 arg: QUOTED_STRING .

    $default  reduce using rule 27 (arg)


State 32

   13 guards: VBAR cond . EQUALITY result

    EQUALITY  shift, and go to state 42


State 33

   15 cond: arg . DOUBLEEQ arg
   16     | arg . GREATEREQ arg
   17     | arg . LESSEQ arg
   18     | arg . GREATER arg
   19     | arg . LESS arg

    DOUBLEEQ   shift, and go to state 43
    GREATEREQ  shift, and go to state 44
    LESSEQ     shift, and go to state 45
    GREATER    shift, and go to state 46
    LESS       shift, and go to state 47


State 34

   14 guards: guards VBAR . cond EQUALITY result

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    cond  go to state 48
    arg   go to state 33


State 35

   25 pattern: pattern IDENTIFIER .

    $default  reduce using rule 25 (pattern)


State 36

    9 pattern_matching: IDENTIFIER pattern EQUALITY . result

    NUMBER         shift, and go to state 26
    QUOTED_STRING  shift, and go to state 27

    result  go to state 49


State 37

   23 pattern: pattern NUMBER .

    $default  reduce using rule 23 (pattern)


State 38

   24 pattern: pattern QUOTED_STRING .

    $default  reduce using rule 24 (pattern)


State 39

   11 pattern_matching: IDENTIFIER pattern guards .
   14 guards: guards . VBAR cond EQUALITY result

    VBAR  shift, and go to state 34

    $default  reduce using rule 11 (pattern_matching)


State 40

   32 arg_list: arg_list ARROW arg_type .

    $default  reduce using rule 32 (arg_list)


State 41

    5 function_definition: IDENTIFIER COLONCOLON arg_list ARROW return_type .

    $default  reduce using rule 5 (function_definition)


State 42

   13 guards: VBAR cond EQUALITY . result

    NUMBER         shift, and go to state 26
    QUOTED_STRING  shift, and go to state 27

    result  go to state 50


State 43

   15 cond: arg DOUBLEEQ . arg

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    arg  go to state 51


State 44

   16 cond: arg GREATEREQ . arg

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    arg  go to state 52


State 45

   17 cond: arg LESSEQ . arg

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    arg  go to state 53


State 46

   18 cond: arg GREATER . arg

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    arg  go to state 54


State 47

   19 cond: arg LESS . arg

    IDENTIFIER     shift, and go to state 29
    NUMBER         shift, and go to state 30
    QUOTED_STRING  shift, and go to state 31

    arg  go to state 55


State 48

   14 guards: guards VBAR cond . EQUALITY result

    EQUALITY  shift, and go to state 56


State 49

    9 pattern_matching: IDENTIFIER pattern EQUALITY result .

    $default  reduce using rule 9 (pattern_matching)


State 50

   13 guards: VBAR cond EQUALITY result .

    $default  reduce using rule 13 (guards)


State 51

   15 cond: arg DOUBLEEQ arg .

    $default  reduce using rule 15 (cond)


State 52

   16 cond: arg GREATEREQ arg .

    $default  reduce using rule 16 (cond)


State 53

   17 cond: arg LESSEQ arg .

    $default  reduce using rule 17 (cond)


State 54

   18 cond: arg GREATER arg .

    $default  reduce using rule 18 (cond)


State 55

   19 cond: arg LESS arg .

    $default  reduce using rule 19 (cond)


State 56

   14 guards: guards VBAR cond EQUALITY . result

    NUMBER         shift, and go to state 26
    QUOTED_STRING  shift, and go to state 27

    result  go to state 57


State 57

   14 guards: guards VBAR cond EQUALITY result .

    $default  reduce using rule 14 (guards)
